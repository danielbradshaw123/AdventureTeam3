<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASEhIQEhIQFRUQFRAQFRUVEA8QFQ8QFRUWFhURFRUY
        HSggGBolGxUVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhoQEBovHR8dLS0rLS0tLS0rLS0t
        LS0tLS0rLS0tLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0tLSstLSv/wAARCACxARwDASIAAhEBAxEB/8QA
        GwAAAQUBAQAAAAAAAAAAAAAABAECAwUGAAf/xABCEAACAQIDBAgDBAYJBQAAAAABAgADEQQhMQUSQVEG
        EyIyYXGBkVKhsUJywdEHFJKi4fAjMzRDYmNzgrIVg7PC8f/EABoBAAMBAQEBAAAAAAAAAAAAAAECAwQA
        BQb/xAAnEQACAgEEAAcAAwEAAAAAAAAAAQIRAxIhMUEEEyIyUWFxBSOxQv/aAAwDAQACEQMRAD8Av/0l
        Y4hGW/8AhnlNpt/0h4ree19TMUZ8v4JNY7+We/ONKMfhFz0dOTjxBjtuYcVFPMaSHo+/f9I7atfLKexj
        9pintMxWIXO3KDmHY4Z3gLysRmMM0Gy/7MfvN9BM/PQ9gdHQdmHFs1wzOFUZW4Zn0kPFzUIK/lGv+PnG
        GVuXwzDNrOEuf1RBnYSJ1A4D2ECzJilWROCX0EtKWfAewhdNRyHtOeajmUYwzcjLrYexV3lq4gDqRmRv
        Mu/lzGdrw2rhwq0qg7Sm5qXVlCEMRuA/aNgDlzglatXxlQUaKsx4BRkohjklJXwTk+gCtiQhsrkgXsqi
        y/PMyLcrVM9B4/kJusB0ESiA1d95jqq6DwLflEx2FoU7hUX6/WB50tkBYHzIxdPZnxM3pYSdNmpyb9pp
        aViDwAkYEXzZMPlx+AP/AKbT5H9pon/TPhdx52YSwVZMiTlkkdoj8FLWwFQaqrj2Psfzgpwim4BKt8LX
        /wDompRYlfBI4swvyOhHkY6zPsSWFdGV/UmCsWKruWyLAFwfh+L0gOIGU0WM2e9MG46ynztmvn+YlTjM
        FldMwfdfPw8ZeMr4ISVbFdhzCBIuoZGKOCGXUHUSZRDN7ix4IashaT1dZA0aIkhREMURDHEGmRtJDI2j
        IDFEQRREEJwqx5jVjjAcj0bpViC1dvO/pKUwjH1d6ozeMHM8LHHTBI9mTuTZYbFPe9I3aR1jdltYt5CM
        2i034vaZMnvKDFHOA1BDMRrBKwlogZFPYOjZvsA+FSp9Z4/PXujRC9H3J+1UcDz3hMX8im8a/UPhfqRj
        CMoJWhhjKeDaobLu8s3VPmxAk4FuAOjLbZuH6xrE2VQXdvhQan8PMwg9DNojtCgGGvZxWCa/oKs7bvWU
        qZFYIlVxTNRECAJTQbtNOySCTbePmJZ43e4rmuganhq+0MQuGoCwGnw0aQ1djz+pnrOx9gUMDR6ukouQ
        N9zm1RuZPLwkf6Nejf6thQ7j+mxAFWoTqobNKfotvUmXG1TuA+RiZZf8rgGJpzoyO2MRYzI7Rcs29L7a
        NW5PiT7TPbQ1tEijRN2BR6rEAk1MRyY1Vk6LHKscizgDkWTqkRFk9NZwTlpyg2ns80W6xB2Ce0OCX4/d
        +k1CLOq0gQQRkcj4iPGbTElBSR55tnAlX64EslU6kklW+En6QKaw4MBqmGfusLqeSHukeKmZraSJSfcB
        LEAb2VrP9pfTnNV6jI1p2AawkJk1QyFpSJOR0Qx0aY4g0yNpJIzChWKNIkdwjYTmOSOjUjxAE1V7zjOU
        Tmnjvk9ZE+CaxPlGY9o7D8ZBjDNeL2kMnuKirB3k9SQtLIRkAnrXRs72wWHwVanpnfKeTMJ650Kp72xK
        o/zah9gJi/kpViT+0PgXrRjmgWMUlbA2tn4esPp0mchEVnY5BUVnZvJRmYDtbDVaV1rA0iPsP2an7Go9
        YMMW3aKSceyqweAqVGIVN7dsWIGSAsFuT5sJtti7NGLxuGoW7BfrXH+TSAO762Amd2I9G7t295VFh8Ru
        WyA5bq+89F/RJSBxOJq69XSpoL8N9iT/AMRNWRkFstj1LrAL+V/T+TM9tqqWv7fKXtQdrP4ZQ7Sp2Byn
        nuy3hktVmHxpsTKHGHOXe1nsx9ZQPmZWKLze4xVvCES0bTWMxoYLdSRbW3KOlZNugkCS0hAEZt+kLntC
        58bR7CuLuCCATkdbXjaBdRapThVOnBcDV3lDc4YrRWqHRKizmEdTklooTPdIF3eqq/C4RvuuLfW0zHSK
        gBW37f1iqx+8OyfoD6zY9KqV8NU/whW9VYH8JnNrlTSDMpLG6qb23L7puRx0PvNON7GXMvUZarrIGk9b
        WQNLxM0hY0xYkoINMjMkMjMKFY/hGRx0jYTmOSSCRrJFEAxqYxm9JKINip5C3Z6qC6Ghg2LMlwrXWD4t
        psgvSZp+4rS1yZEYlR7NFMpQrYjLPUOguL3dkYgG1kqt7FRPMZaYDGuKFSiCQrMrsLnMgED6zN4zF5uP
        T9ov4ZXkSFq7drKCtCpUpXuC1Nmps4voWGdvCUh3iSxuSTck3JJPEniZNHCaI1FUCWHU7sn2SU6ztvuW
        DEWF957dlDyueM9T/Q3U/tl9S1A+ln/KeV4LCmrUSmu6GqMqAsbAFiBcngJ6x0K2Y2DxdWnvrUStSRlq
        J3HZG4Z+LSWaSoPlS/T0lqg1zmd6V7Wp018TlLuhWUZsbAZ5zP7ZxFCoT3MstB7zENhh6uODzvaWNDnK
        ArLTbYszAbticrDMDxMqgDLpbDS5CFkoF8uchSG0EynAAqdM79Icg49oXVYnsrqcvIc5O9PtIfMR6pYk
        nh8zGbBQuEoBVC8uHOGUaLHwkNFwMznDaNZjplFYyRLSw/OSMlpyqec5lMA6RT9JGthq/hTf6TMNi0TD
        71RQ2/YC4vY7vy1mp2/hnq0KlNLb1RSovkM5Q7T2ayYUq7LTZAGCgo/WWItcEZC8viaSM2eLb2MdWFNh
        dTbwJv7GBuJZbQxjVD/SJRuFCg06NOhpo1qYAJ9JWvNKoxMSJFiGOKNMjkhkcKAx50jI8jKMhAOWS2ka
        iTLAxjTgwbECEmD155MeT1ehcE9gRIMWYtI2vIqxmuPBnl7isramSUzcSOv3jGo1perRJ8hELwmj+Qgk
        Iwh733ZKa2NHhX/agcxwjY4TmXQ6m5UhhqpBHmJ6L0Kx7LVKC5UKKii17Aso7PK4aecTVdGcWyhWTvha
        tDI2Om+hHjlb0kMytFYPo9U6RYhlpXB5zFYPEM+9n3QWJ8POaym3XYOkTmXprfP7QFifcGY2nha1MurL
        u3uuZK7wORA5zPBI6qSKzE4vtG5y53iJWU6Ee4lliejjU6JqVDQUO5QllDOq7p3QGIstyDpbUTG1sOwf
        dUcbX3gLDn4iaoRUuDLllo5NZh0BlqmHAXePCYZsU1EgB7+p/HSW+D24SVD9pRnYZZ+POCUKOjJM0NVL
        dUeZJj8WlmHIi8TA4wVje3kPhEXa1YItzbs5gkxCiVi4SgTmdIeMRSTK4mHxO2HqEqtRh4A7q/LWN2Tg
        Xd2LuVC6EM128TyjrG2JLKo7G7pY5G7tj6whGvrMfs/EsHyJZQd1WIG945jUTVUny8YklRaLtEWNcKN7
        lc+kwfSXFlt0cX/pD4LchF+RPtNV0kqEU90a1CEHrMFtisGqtbRbIPJRb6gxoIlmdIqq+sHaEVoO81xP
        OkJOnTjKCDTI5IZHGQGSNpGCPbQRgnAHLJRIlkwgYxp6khZSdATNFs/Z1M94FvPSF4miqiygDyE86OF8
        s9B5kY40GXvC0HqCXGPWU1aaEqJuVsrsSM5FCMWNIPLR4JvkkpPwhWHex8wRAZMr3iyjY+GWmaZIdY4R
        gjxJmxHS66NVTvPTXvMBVT/VpXYD1Xe+UpZLhaxR0dSQUZWBGoIN4slaodOme77Hpj9Wo7osCoe2XZ3i
        Wt87QHpdQvTWqoF0tf3MK6PbUpYikHp90FlzIuLZ520yMftIB1Knwv5cZgumVqzIbe2q1SmpFytSmqut
        slZftfWZF8Kp4keRtLzaiFWZBkptkosLAaStaiDNON0jLk3dMrauFUcLzqVMw80QIi07mygkkgADMknI
        CPrFUS76NnO3haWG08J1ilOJ0PKB7KotSco4sy5EZZH0l2LXkuyseDHnYgU2cevCF4fZlMeI5Z2l5imG
        hAMiVb6WHoI+sVxEw9JQQcvASyUWHnEwuHAGeZ8c46rEbHSM90srlFWoLdjfC/fYAA/U+kwQmi6dY4mo
        tAd1AHPi5v8AQfWZ7hLRVIy5ncgaqYOwhNWDNNETHISdFiRxBpkckMjjIDJH0jBHvoIwQndj1kqyJZNT
        GUUJ6ds2LjmjMFBtpYumvedR6i/tIl0isxko8SM4bjNpLnu3PjoJS16zHUzuSlNDcUdIMY9o2UQjEj6W
        sZHU9YXwdH3IIEfGCPkWboixIsclJm7qsfJSfpFHN3+irH2atQJ71qq+JA3W/wDWbmshYm3j6j+bTyvo
        1hnoVkxFSpTorTNyGJZ3W2aimtzn42np2BxqMVYEEMN4HgwytMeZLVaNEOCh29g903Yc/WZwU87TbbcZ
        CCxYAAZ8bnhlcZ6zEVqwuSI2PdGXJsyPHZDLWWnQDBK+KV6jALRVq9viZbbo9yD6SkqnjfWC4faVWg4Z
        GGVwQRcEHUHwj1fAqa7NTicVv4ipU+JzLSrTcgWmfwe0sOW6xiV4kWJseNjCMTt0VsqTdWoNrnJiPwg0
        sbUh1F26xlY6MRLzB0RaUmFCNkrLlxuLk85bYZjbPhOOsOaw0kJPOLSMqulmO6jDVag7zDq1+8+V/QXP
        pOSt0M5UrPOtq4vra9Wp8Tm33RkPkBGE5QOjoIYgmqSo8/Ve5DW0grQmrygzR4EZnRIsQxxBpjBHmMjI
        DJH0kckfSRwg7JFk1IZSBYRSOUUYusbh8WubmoV5qxK/LSALPR6A7MpdqbJQm7KqXsQSQtwdDaZ5NLk3
        4pdUZF4NUmhXZFEE7+IBHJFAPux/CPAwdPSmreLk1PlkPlJ+dFfZaUL7ozFNCxsoJPIAk/KWWH6PYl/7
        vdHNyF+Wvyly22iotTG6OSqqD5CDvtJ21t6kt65wPPPpCLFDt3+EVPo2i51KwPNUAvflnc/KQts+iCbb
        59f4Qg1joX9ADFWqnw3/ANp/OJ5mTtlVij1EiTD0fh93P5wlaVHgifvtOGI5If2RFNaofsn6SblJ9llG
        XwSo4HdT9235R/64w4HhqdfrBy1Q67o8zeNKNxf2EV/o+/bQzGVSQSeOXzmu6D4rfoldTRJ/ZOf4zE4x
        bAZk3PGWPRDaDUqj7pzya3xAXDD2PyjSj/XfwVwvVNY793+mx6RYdyARbdzbSUg2aGTeub6ADjzN5odo
        7QV6V1GRzGlweKGZmvWrLpcgHhnbwM6LtUjJmjUtyCuEp5WvzJz9pWGjvngBzk+IdmJ379rPMW9oI+DN
        +ySPW0tCJlluWJ2adw2YZ+MDp7Odc/xj6WAqD+8+ektsBs0X3ne5949AoFw+FuQVvveAOXrLzZrVAwUm
        FYemi5AAfUyZdwMNLmSZSKLADlPO+nu1FrVVoI3YpXuRmDUP5DL3mj6Tba3KZpUz22FiR9hT+JnmrLbP
        xlMK3sfOmoL4Y9KdrScm0lRLgRDTjudszvC0tgSpnB2EPah4yCphm85SMkZ5QYPEMVhElCI0xgj2jBGQ
        GSVNJGJJUkcIB6wmiuUHSF0FyisY9WwWGNQqgyvqeS6k+0oum7b/AFbIrbtIvQLXJUWO8iedjDNibTqC
        liWyulKym2d2YD6Sn2grUsJRG6L4gtiWZs23gzIAL6ZCedOeuSro9TDHTF32UQoOeH8+sd+rcyPQ3kXW
        ufCNKk6sZSmC0gpaNPifmPzkgamPh+RgS0RJlojkIHH7GUwrr6fNfYmL+uUx9r93+EHFIch7RdwchE0I
        PmEz7Qp/Ex9D/CRttJOTH+fOMKDlGFBCoRA5jzjzwT3MjbEVDxUeQiWiVDYRlCK6F1sge5IuxNpHvlXB
        GskURmIXQyqXQim7tGi2Ttu2T2s2vn8Q5GayjhlZUdDkSdM7rPNaQvYHQkZ8vGbPovtA0qfUtwc5cSRY
        5e4MzZMdK0bJ5/Mfq5IekWGampsMgxb0Nh9cpmsRTqbnWHS4UDxN/wAprukdcPSIW93ZeycyLZKJR7dR
        Up06Q1S+8ebkD6Luj0MbDPbcy5Y/BV0cQd05mEbPxjXuScoCuQk9FbLLNIimzR4LaJzJPlEr4tid6+gN
        pT4YHSE1qgCgXzPhJMtD1SSA8U+TE6n5kysxNLuoNdT5mFYipvMFHDMw3BYIX3jHx+lWaPHTUpKK4QDT
        BUWIJtyOkfdTxt5iGYlczITSB4TnuZlMi6s+fkQY205sPyvOHWDjfzz+sFDar5EekDqINUwI4G3nCxW+
        JSPL8o8FToVPyMKlJCyxwl9FLWw7jUeozEHE0ZS3h/POQVcKp1X2/hLRzrszy8LLmO5UVBIxLGts+/dP
        vBKmGddQfTOWU4vgzuEo8oakMw5yglP8IZhR2ZwUbnomA1SpRbSrTZfUEN9AY7pxUB6tV7tNQg8AIZ+j
        vC79V6x7tNCt+bPkB7XgvTWluNnpnaeVD3UepJegyBXS3GKwAyj6BkVfIzUZ7HKJMiyKnCaQisKY20Qi
        SERtoAkTRhkjxkJ1iIkixJ4QwCwgFQ3JhQrZ1OPrUri0SgMxJamsYCK+k3D0hdOuwtYnI72vGwH4SDEU
        7NfnFUwyVotilFvfk0GHxPXJckB0Km17b1uIEbtCiWJJvYkkXlIjkZgy8wOIWqi0ybOotx7QkNOndFMu
        PtFXUocoUKXDwhFbDFTYjSPFONqM+jcjpoBrwg20toKF3EzJ42tu+A438Ym0cZuAqOOv5StwtIs1zGjG
        92UrR+hey8PxMuwthI8LQsJLXOUEnZKwCtIhJKjRs4B0S0WJCEbuxjUFPCSFow1Jx10MFIjusR4aziSN
        Vv4rl8o4PHLnBQ2t9kO+Dxt4N2T7ziDyP1+clq7vGCtujS48jO0/A2v5FNFW4DPLxg9BQARyJEJwwdjl
        n5/mIe+Ata9rkXPnK45U9yGWKfCPQNlUzgtmKwDb7KKzdkt23tYG2gAt7Sl27XXFYcVVILILOOR8RNF0
        ic1cI9BOzZ6djxIVCx08FAmA2DiLVWpE5VlNP/dqvzFvWYcT1Ny+zbN0qKqlrOxo0Mkq091iORMfiEuv
        lNZkB6eUNpQF2yhWCe4nSR0WTkSJoQRBazREOyF2ktKnI8OlzDDlGFB8QcpXwzEtlA4yFZJSOYi12zka
        mR4p4yQL2JnYEWg+6RGJSqP3QfPhCaeyah7zgeWcakhNTfQMz24x2ErHev8AOFjZ9JdSTIsRVTRRpA6e
        yKwySi03wEviuZv6yPF7Uv3csrWEr8zJsPhd4xViiuS0/Eyl7VQyjSZ2uZo8Dgt3MzsBgguolicospdI
        j+jYLink1R5X4qpeKkcwctJk0gt4XROULOGGRu0kqQYzjhxaIFj1WSqtpxwxQBOqVOAjWfONPMzjiF+Z
        kajeNpztcwzZdHPePCNwAtMDQCgQba1U79hfIAQ1TYFzovzMioqGFzmTET3sMlao9B2hr/3an/gaeW0P
        7Qn+qn/MTp0z+H7NGXhE21P66p94xv2Z06aSADW0k+zp06M+BV7iwMBxM6dEiOx+Ck1WLOhFAMVBTFnR
        kBjZGdZ06OKXOG7se+k6dElyNHgq8TAzOnRogZyy3wHCdOhmci9pTqk6dIDg1WAV506MgMGhVGdOnM4S
        rB506E4mWPeJOgOBhOxOk6dCAGTQy0wXdE6dC+DkG7Q/qf8AcsdhO6J06TYx/9k=
</value>
  </data>
</root>